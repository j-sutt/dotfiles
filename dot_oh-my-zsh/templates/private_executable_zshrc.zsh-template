# executed by zsh(1) for interactive activation
# shellcheck shell=bash
#===========================Note============================
#   This script is loaded before .zlogin but after .zprofile
#
#   Should contain commands to set up aliases, functions, 
#       options, key bindings, etc.
#===========================================================

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
if [ -n "$ZDOTDIR" ]; then
  ZSH=$ZDOTDIR/${OMZ_DIR_NAME:-oh-my-zsh}
elif [ -n "$DOTFILES_DIR" ]; then
  ZSH=$DOTFILES_DIR/${OMZ_DIR_NAME:-oh-my-zsh}
else
  ZSH=$HOME/.oh-my-zsh
fi

# handle virtualenvwrapper stuff
if [ ! -f "/usr/local/bin/virtualenvwrapper_lazy.sh" ]; then
  echo "Virtualenvwrapper not found. Skipping its rc setup."
else
  echo "Virtualenvwrapper found. Setting up env vars..."
  if [ -z "$WORKON_HOME" ]; then
    export WORKON_HOME="$HOME/Venvs"
    echo "WORKON_HOME=$WORKON_HOME"
  fi
  if [ -z "$PROJECT_HOME" ]; then
    export PROJECT_HOME="$HOME/Devel"
    echo "PROJECT_HOME=$PROJECT_HOME"
  fi
  if [ -n "$VIRTUALENVWRAPPER_SCRIPT" ]; then
    echo "VIRTUALENVWRAPPER_SCRIPT=$VIRTUALENVWRAPPER_SCRIPT"
  else
    DEFAULT_VENVWRAPPER_SCRIPT="$(which virtualenvwrapper.sh)" \
      || DEFAULT_VENVWRAPPER_SCRIPT="/usr/local/bin/virtualenvwrapper.sh"
    if [ -f $DEFAULT_VENVWRAPPER_SCRIPT ]; then
      export VIRTUALENVWRAPPER_SCRIPT=$DEFAULT_VENVWRAPPER_SCRIPT
      echo "VIRTUALENVWRAPPER_SCRIPT=$VIRTUALENVWRAPPER_SCRIPT (default)"
    else
      echo "VIRTUALENVWRAPPER_SCRIPT not specified, and default not found."
      unset DEFAULT_VENVWRAPPER_SCRIPT
    fi
  fi

  if [ -f "$VIRTUALENVWRAPPER_SCRIPT" ]; then
    echo "Sourcing (lazily) $VIRTUALENVWRAPPER_SCRIPT"
    # shellcheck source=/dev/null
    . /usr/local/bin/virtualenvwrapper_lazy.sh 2> /dev/null \
      || echo "Failed to source /usr/local/bin/virtualenvwrapper_lazy.sh"
  elif [ -f "$DEFAULT_VENVWRAPPER_SCRIPT" ]; then
    echo "Sourcing $DEFAULT_VENVWRAPPER_SCRIPT"
    # shellcheck source=/dev/null
    . "$DEFAULT_VENVWRAPPER_SCRIPT" 2> /dev/null \
      || echo "Failed to source $DEFAULT_VENVWRAPPER_SCRIPT"
  else
    echo "No virtualenvwrapper script found."
    echo "Unsetting VIRTUALENVWRAPPER_SCRIPT..."
    unset VIRTUALENVWRAPPER_SCRIPT
    echo "  VIRTUALENVWRAPPER_SCRIPT=$VIRTUALENVWRAPPER_SCRIPT"
  fi
fi

if [ -f "$ZSH/oh-my-zsh.sh" ]; then
  echo "Oh-my-zsh found. Configuring..."
  echo "------------------- configuring omz ----------------------"
  export ZSH
else
  echo "Oh-my-zsh not found. Skipping rest of .zshrc."
  echo "-------------------- zshrc done --------------------------"
  unset ZSH
  exit 0
fi
#==============================================================================
plugins_list=(
  git 
  pip 
  themes 
  kate 
  colored-man-pages 
  aliases
  virtualenv
)
if [ -n "$VIRTUALENVWRAPPER_SCRIPT" ]; then
  plugins_list+=(virtualenvwrapper)
fi

echo "Plugins:"
printf "> %s\n" "${plugins_list[@]}"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# shellcheck disable=SC2034
ZSH_THEME="ys"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# shellcheck disable=SC2034
ZSH_THEME_RANDOM_CANDIDATES=( "bira" "darkblood" "duellj" "gnzh" "strug" "ys" )

# Uncomment the following line to use case-sensitive completion.
#CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
#HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
#zstyle ':omz:update' mode disabled  # disable automatic updates
#zstyle ':omz:update' mode auto      # update automatically without asking
#zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
#zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
#DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
#DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
#DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
#ENABLE_CORRECTION="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
#DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
#HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
#ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
# shellcheck disable=SC2034
plugins=("${plugins_list[@]}")

# shellcheck source=/dev/null
source "$ZSH"/oh-my-zsh.sh

# User configuration

#export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
#export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
#if [[ -n $SSH_CONNECTION ]]; then
#  export EDITOR='vim'
#else
#  export EDITOR='mvim'
#fi

# Compilation flags
#export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

echo "-------------------- zshrc done --------------------------"