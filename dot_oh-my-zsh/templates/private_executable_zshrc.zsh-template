# executed by zsh(1) for interactive activation
# shellcheck shell=bash
#===========================Note============================
#   This script is loaded before .zlogin but after .zprofile
#
#   Should contain commands to set up aliases, functions, 
#       options, key bindings, etc.
#===========================================================
# If you come from bash you might have to change your $PATH.
export PATH=$HOME/bin:/usr/local/bin:$PATH



#>==================================OhMyZsh====================================
if [[ (-d "${DOTFILES_DIR}") && (-d "${ZDOTDIR}") ]]; then
  ZDOTDIRNAME="$(basename "${ZDOTDIR}")"
  if [[ "${DOTFILES_DIR}" -ef "${ZDOTDIR}" ]]; then
    echo "DOTFILES_DIR and ZDOTDIR are the same!"
    echo "DOTFILES_DIR: ${DOTFILES_DIR}"
  elif [[ "${DOTFILES_DIR}/${ZDOTDIRNAME}" -ef "${ZDOTDIR}" ]]; then
    echo "DOTFILES_DIR contains ZDOTDIR!"
    echo "ZDOTDIR: ${ZDOTDIR}"
  else
    echo "ERROR: One or both of DOTFILES_DIR & ZDOTDIR are not set correctly!"
    exit 1
  fi
elif [[ (-d "${DOTFILES_DIR}") && ( -z "${ZDOTDIR}") ]]; then
  echo "DOTFILES_DIR is set, but ZDOTDIR is not!"
  zddirsubfolder="${DOTFILES_DIR}/${ZDOTDIR_NAME:-zsh_startup-files}"
  if [ -d "${zddirsubfolder}" ]; then
    echo "Setting ZDOTDIR to ${zddirsubfolder}"
    ZDOTDIR="${zddirsubfolder}" && export ZDOTDIR
  else
    echo "Setting ZDOTDIR to ${DOTFILES_DIR}"
    ZDOTDIR="${DOTFILES_DIR}" && export ZDOTDIR
  fi
elif [[ ( -z "${DOTFILES_DIR}") && (-d "${ZDOTDIR}") ]]; then
  echo "ZDOTDIR is set, but DOTFILES_DIR is not!"
  echo "Setting DOTFILES_DIR to $ZDOTDIR"
  DOTFILES_DIR="${ZDOTDIR}" && export DOTFILES_DIR
elif [[ ( -z "${DOTFILES_DIR}") && ( -z "${ZDOTDIR}") ]]; then
  echo "Neither DOTFILES_DIR nor ZDOTDIR are set!"
  echo "Defaulting to $HOME (home directory)"
  DOTFILES_DIR="${HOME}" && ZDOTDIR="${HOME}" \
    && export DOTFILES_DIR ZDOTDIR
else
  echo "ERROR: Something is wrong with DOTFILES_DIR and ZDOTDIR!"
  echo "DOTFILES_DIR: ${DOTFILES_DIR}" && echo "ZDOTDIR: ${ZDOTDIR}"
  exit 1
fi

ZSH="$(realpath "${DOTFILES_DIR}")/${OMZ_DIR_NAME:-.oh-my-zsh}"

# shellcheck source=/dev/null
. "${DOTFILES_DIR}/.hooks/source_venvwrappersetup"

if [ -f "$ZSH/oh-my-zsh.sh" ]; then
  echo "Oh-my-zsh found. Configuring..."
  echo "------------------- configuring omz ----------------------"
  export ZSH
else
  echo "Oh-my-zsh NOT found. Skipping rest of .zshrc."
  echo "-------------------- zshrc done --------------------------"
  unset ZSH
  exit 0
fi
#>=============================================================================
#  Oh-my-zsh plugins
plugins_list=(
  git 
  pip 
  themes 
  kate 
  colored-man-pages 
  aliases
  virtualenv
)
if [ -n "$VIRTUALENVWRAPPER_SCRIPT" ]; then
  plugins_list+=(virtualenvwrapper)
fi

echo "Plugins:"
printf "> %s\n" "${plugins_list[@]}"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# shellcheck disable=SC2034
ZSH_THEME="ys"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# shellcheck disable=SC2034
ZSH_THEME_RANDOM_CANDIDATES=( "bira" "darkblood" "duellj" "gnzh" "strug" "ys" )

# Uncomment the following line to use case-sensitive completion.
#CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
#HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
#zstyle ':omz:update' mode disabled  # disable automatic updates
#zstyle ':omz:update' mode auto      # update automatically without asking
#zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
#zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
#DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
#DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
#DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
#ENABLE_CORRECTION="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
#DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
#HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
#ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
# shellcheck disable=SC2034
plugins=("${plugins_list[@]}")

# shellcheck source=/dev/null
source "$ZSH"/oh-my-zsh.sh

#>============================ User configuration =============================

#export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
#export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
#if [[ -n $SSH_CONNECTION ]]; then
#  export EDITOR='vim'
#else
#  export EDITOR='mvim'
#fi

# Compilation flags
#export ARCHFLAGS="-arch x86_64"

#>--------------------------------- aliases -----------------------------------
# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
alias curlomz='sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"'
alias wgetomz='sh -c "$(wget https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)"'
alias chezmoirepo="https://github.com/j-sutt/dotfiles.git"


echo "-------------------- zshrc done --------------------------"